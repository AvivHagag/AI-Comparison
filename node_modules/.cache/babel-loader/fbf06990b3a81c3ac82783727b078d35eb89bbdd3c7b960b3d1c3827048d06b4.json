{"ast":null,"code":"var _jsxFileName = \"/Users/avivhagag/Documents/React/AI- Comparison/Project copy/src/Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Report from './Report';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState('Enter links here:');\n  const [url, setUrl] = useState('');\n  const [links, setLinks] = useState([]);\n  const [showReport, setShowReport] = useState(false);\n  const validURL = str => {\n    // Regular expression pattern for URL validation\n    let urlPattern = /^(https?:\\/\\/)?[\\w.-]+\\.[a-zA-Z]{2,}(\\/\\S*)?$/;\n    // Test if the input matches the URL pattern\n    return urlPattern.test(url);\n  };\n  const checkEvent = () => {\n    if (validURL(url)) {\n      console.log(url);\n      setLinks([...links, url]); // Update the state with the new URL\n      setCount(count + 1);\n      if (links.length == 0) {\n        setText('You entered ' + (count + 1) + ' links, enter at least 1 more link here:');\n      } else {\n        setText('You entered ' + (count + 1));\n      }\n      setUrl(''); // Reset the url state to clear the input\n    } else {\n      setText(\"Invalid link ! please enter a new one\");\n      setUrl(''); // Reset the url state to clear the input\n    }\n  };\n\n  const inputUrl = e => {\n    setUrl(e.target.value);\n  };\n  const checkSumbit = () => {\n    if (links.length >= 2) {\n      setShowReport(true); // Set the state to show the Report component\n    } else {\n      setText('Insert at least 2 links.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!showReport && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Comparison Mode: \", deepComparison ? 'Deep' : 'Shallow', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: deepComparison,\n            onChange: toggleComparison\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please insert at least 2 links to run the AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: url,\n        onChange: e => inputUrl(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"SearchBtn\",\n        onClick: checkEvent,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), count >= 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Sumbit\",\n        onClick: checkSumbit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), showReport ? /*#__PURE__*/_jsxDEV(Report, {\n      links: links\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 20\n    }, this) : null]\n  }, void 0, true);\n};\n_s(Home, \"Z8cs0ohYH90TM6T7LmSw3yC0Q8g=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","Report","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","count","setCount","text","setText","url","setUrl","links","setLinks","showReport","setShowReport","validURL","str","urlPattern","test","checkEvent","console","log","length","inputUrl","e","target","value","checkSumbit","children","className","deepComparison","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","toggleComparison","required","onClick","_c","$RefreshReg$"],"sources":["/Users/avivhagag/Documents/React/AI- Comparison/Project copy/src/Home.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Report from './Report';\n\n\nconst Home = () => {\n  const [count,setCount] =useState(0);\n  const [text,setText] = useState('Enter links here:');\n  const [url, setUrl] = useState('');\n  const [links, setLinks] = useState([]);\n  const [showReport,setShowReport]= useState(false);\n  const validURL=(str)=> {\n      // Regular expression pattern for URL validation\n      let urlPattern = /^(https?:\\/\\/)?[\\w.-]+\\.[a-zA-Z]{2,}(\\/\\S*)?$/;\n      // Test if the input matches the URL pattern\n      return urlPattern.test(url);\n    }\n    \n  const checkEvent=()=> {\n    if(validURL(url)){\n      console.log(url);\n      setLinks([...links, url]); // Update the state with the new URL\n      setCount(count+1);\n      if(links.length == 0) {\n        setText('You entered ' + (count+1) +' links, enter at least 1 more link here:');\n      }\n      else {\n        setText('You entered ' +(count+1));\n      }\n      setUrl(''); // Reset the url state to clear the input\n    }\n    else {\n      setText(\"Invalid link ! please enter a new one\");\n      setUrl(''); // Reset the url state to clear the input\n    }\n  }\n\n  const inputUrl=(e) => {\n    setUrl(e.target.value)\n  }\n\n  const checkSumbit=()=> {\n    if (links.length >= 2) {\n      setShowReport(true); // Set the state to show the Report component\n    } else {\n      setText('Insert at least 2 links.');\n    }\n  }\n\n  return (\n    <>\n    {!showReport &&\n    <div className=\"home\">\n      <div>\n        <label> Comparison Mode: {deepComparison ? 'Deep' : 'Shallow'} </label>\n          <label className=\"switch\"> \n              <input\n                  type=\"checkbox\"\n                  checked={deepComparison}\n                  onChange={toggleComparison}\n                />\n              <span className=\"slider round\"></span>\n           </label>\n      </div>\n      <h2>Please insert at least 2 links to run the AI</h2>\n      <label>{text}</label>\n      <br />\n      <input\n        type=\"text\"\n        required\n        value={url}\n        onChange={(e) => inputUrl(e)}\n      />\n      <button className=\"SearchBtn\" onClick={checkEvent}>add</button>\n      <br />\n      {count >= 2 && (\n        <button className=\"Sumbit\" onClick={checkSumbit}>\n          Submit\n        </button>\n      )}\n      </div>\n    }\n      {showReport? <Report links={links} />:null}\n    </>\n  );\n};\n\n\nexport default Home;\n\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG9B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAEV,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACW,IAAI,EAACC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,mBAAmB,CAAC;EACpD,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,UAAU,EAACC,aAAa,CAAC,GAAElB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMmB,QAAQ,GAAEC,GAAG,IAAI;IACnB;IACA,IAAIC,UAAU,GAAG,+CAA+C;IAChE;IACA,OAAOA,UAAU,CAACC,IAAI,CAACT,GAAG,CAAC;EAC7B,CAAC;EAEH,MAAMU,UAAU,GAACA,CAAA,KAAK;IACpB,IAAGJ,QAAQ,CAACN,GAAG,CAAC,EAAC;MACfW,OAAO,CAACC,GAAG,CAACZ,GAAG,CAAC;MAChBG,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEF,GAAG,CAAC,CAAC,CAAC,CAAC;MAC3BH,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;MACjB,IAAGM,KAAK,CAACW,MAAM,IAAI,CAAC,EAAE;QACpBd,OAAO,CAAC,cAAc,IAAIH,KAAK,GAAC,CAAC,CAAC,GAAE,0CAA0C,CAAC;MACjF,CAAC,MACI;QACHG,OAAO,CAAC,cAAc,IAAGH,KAAK,GAAC,CAAC,CAAC,CAAC;MACpC;MACAK,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACd,CAAC,MACI;MACHF,OAAO,CAAC,uCAAuC,CAAC;MAChDE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACd;EACF,CAAC;;EAED,MAAMa,QAAQ,GAAEC,CAAC,IAAK;IACpBd,MAAM,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMC,WAAW,GAACA,CAAA,KAAK;IACrB,IAAIhB,KAAK,CAACW,MAAM,IAAI,CAAC,EAAE;MACrBR,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,MAAM;MACLN,OAAO,CAAC,0BAA0B,CAAC;IACrC;EACF,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAA0B,QAAA,GACC,CAACf,UAAU,iBACZb,OAAA;MAAK6B,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnB5B,OAAA;QAAA4B,QAAA,gBACE5B,OAAA;UAAA4B,QAAA,GAAO,oBAAkB,EAACE,cAAc,GAAG,MAAM,GAAG,SAAS,EAAC,GAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrElC,OAAA;UAAO6B,SAAS,EAAC,QAAQ;UAAAD,QAAA,gBACrB5B,OAAA;YACImC,IAAI,EAAC,UAAU;YACfC,OAAO,EAAEN,cAAe;YACxBO,QAAQ,EAAEC;UAAiB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACJlC,OAAA;YAAM6B,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNlC,OAAA;QAAA4B,QAAA,EAAI;MAA4C;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDlC,OAAA;QAAA4B,QAAA,EAAQrB;MAAI;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrBlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlC,OAAA;QACEmC,IAAI,EAAC,MAAM;QACXI,QAAQ;QACRb,KAAK,EAAEjB,GAAI;QACX4B,QAAQ,EAAGb,CAAC,IAAKD,QAAQ,CAACC,CAAC;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFlC,OAAA;QAAQ6B,SAAS,EAAC,WAAW;QAACW,OAAO,EAAErB,UAAW;QAAAS,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/DlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACL7B,KAAK,IAAI,CAAC,iBACTL,OAAA;QAAQ6B,SAAS,EAAC,QAAQ;QAACW,OAAO,EAAEb,WAAY;QAAAC,QAAA,EAAC;MAEjD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EAELrB,UAAU,gBAAEb,OAAA,CAACF,MAAM;MAACa,KAAK,EAAEA;IAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAC,IAAI;EAAA,eAC1C,CAAC;AAEP,CAAC;AAAC9B,EAAA,CAhFID,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AAmFV,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}