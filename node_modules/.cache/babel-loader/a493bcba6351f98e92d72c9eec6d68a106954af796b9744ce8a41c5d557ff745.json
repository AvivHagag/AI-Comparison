{"ast":null,"code":"var _jsxFileName = \"/Users/avivhagag/Documents/React/AI- Comparison/Project copy/src/Report.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst num = -1;\nconst Report = (links, Value) => {\n  _s();\n  const [data, setData] = useState('Loading....');\n  const json = JSON.stringify(links);\n  console.log(json);\n  useEffect(() => {\n    axios.post('http://127.0.0.1:5000/AI/answer', json, {\n      params: {\n        num: num\n      }\n    }).then(response => {\n      setData(response.data);\n      console.log(response);\n      return;\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [links]);\n\n  // Function to convert new lines to HTML line breaks\n  const formatDataWithNewlines = text => {\n    return {\n      __html: text.replace(/\\n/g, '<br>')\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Report\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), data === 'Loading....' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Use dangerouslySetInnerHTML to render the data with new lines\n    _jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: formatDataWithNewlines(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Report, \"OfMszjL75lbODPnGGx7kZ3CrJsY=\");\n_c = Report;\nexport default Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","num","Report","links","Value","_s","data","setData","json","JSON","stringify","console","log","post","params","then","response","catch","error","formatDataWithNewlines","text","__html","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","_c","$RefreshReg$"],"sources":["/Users/avivhagag/Documents/React/AI- Comparison/Project copy/src/Report.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nconst num=-1\nconst Report = (links,Value) => {\n  const [data, setData] = useState('Loading....');\n  const json = JSON.stringify(links);\n  console.log(json);\n  \n  useEffect(() => {\n    axios.post('http://127.0.0.1:5000/AI/answer',json, {\n      params: {\n        num: num\n      }\n    })\n  .then(response => {\n    setData(response.data);\n    console.log(response);\n    return;\n  })\n  .catch(error => {\n    console.error(error);\n  });\n  }, [links]);\n\n  // Function to convert new lines to HTML line breaks\n  const formatDataWithNewlines = (text) => {\n    return { __html: text.replace(/\\n/g, '<br>') };\n  };\n\n  return (\n    <div className=\"Report\">\n      <h2>Report</h2>\n      <br />\n      {data === 'Loading....' ? (\n        <div>\n          <p>{data}</p>\n          <div className=\"loading-spinner\">\n            <div className=\"spinner\"></div>\n          </div>\n        </div>\n      ) : (\n        // Use dangerouslySetInnerHTML to render the data with new lines\n        <p dangerouslySetInnerHTML={formatDataWithNewlines(data)}></p>\n      )}\n    </div>\n  );  \n  }\n   \n  export default Report;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAC,CAAC,CAAC;AACZ,MAAMC,MAAM,GAAGA,CAACC,KAAK,EAACC,KAAK,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,aAAa,CAAC;EAC/C,MAAMW,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACP,KAAK,CAAC;EAClCQ,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAEjBZ,SAAS,CAAC,MAAM;IACdE,KAAK,CAACe,IAAI,CAAC,iCAAiC,EAACL,IAAI,EAAE;MACjDM,MAAM,EAAE;QACNb,GAAG,EAAEA;MACP;IACF,CAAC,CAAC,CACHc,IAAI,CAACC,QAAQ,IAAI;MAChBT,OAAO,CAACS,QAAQ,CAACV,IAAI,CAAC;MACtBK,OAAO,CAACC,GAAG,CAACI,QAAQ,CAAC;MACrB;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACF,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMgB,sBAAsB,GAAIC,IAAI,IAAK;IACvC,OAAO;MAAEC,MAAM,EAAED,IAAI,CAACE,OAAO,CAAC,KAAK,EAAE,MAAM;IAAE,CAAC;EAChD,CAAC;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBxB,OAAA;MAAAwB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACf5B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLtB,IAAI,KAAK,aAAa,gBACrBN,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,EAAIlB;MAAI;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACb5B,OAAA;QAAKuB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BxB,OAAA;UAAKuB,SAAS,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;IAAA;IAEN;IACA5B,OAAA;MAAG6B,uBAAuB,EAAEV,sBAAsB,CAACb,IAAI;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAC9D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAAAvB,EAAA,CA3CGH,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AA6CV,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}