{"ast":null,"code":"var _jsxFileName = \"/Users/avivhagag/Documents/React/AI- Comparison/Project copy/src/Report.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Val } from './Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Report = links => {\n  _s();\n  const [data, setData] = useState('Loading....');\n  const json = JSON.stringify(links);\n  console.log(json);\n  useEffect(() => {\n    axios.post('http://127.0.0.1:5000/AI/answer', json, {\n      params: {\n        num: Val\n      }\n    }).then(response => {\n      setData(response.data);\n      fetchImages(links);\n      console.log(response);\n      return;\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [links]);\n  const fetchImages = async links => {\n    const imagePromises = links.map(async link => {\n      try {\n        const response = await axios.get(`http://127.0.0.1:5000/AI/get_image?url=${encodeURIComponent(link)}`);\n        return response.data;\n      } catch (error) {\n        console.error(error);\n        return null;\n      }\n    });\n    const imageResults = await Promise.all(imagePromises);\n    setImages(imageResults);\n  };\n\n  // Function to convert new lines to HTML line breaks\n  const formatDataWithNewlines = text => {\n    return {\n      __html: text.replace(/\\n/g, '<br>')\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Report\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), data === 'Loading....' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: images.map((image, index) => image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: `Product ${index}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: formatDataWithNewlines(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Report, \"OfMszjL75lbODPnGGx7kZ3CrJsY=\");\n_c = Report;\nexport default Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["useEffect","useState","axios","Val","jsxDEV","_jsxDEV","Fragment","_Fragment","Report","links","_s","data","setData","json","JSON","stringify","console","log","post","params","num","then","response","fetchImages","catch","error","imagePromises","map","link","get","encodeURIComponent","imageResults","Promise","all","setImages","formatDataWithNewlines","text","__html","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","images","image","index","src","alt","dangerouslySetInnerHTML","_c","$RefreshReg$"],"sources":["/Users/avivhagag/Documents/React/AI- Comparison/Project copy/src/Report.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport {Val} from './Home'\n\nconst Report = (links) => {\n  const [data, setData] = useState('Loading....');\n  const json = JSON.stringify(links);\n  console.log(json);\n\n  useEffect(() => {\n    axios.post('http://127.0.0.1:5000/AI/answer',json, {\n      params: {\n        num: Val\n      }\n    })\n  .then(response => {\n    setData(response.data);\n    fetchImages(links);\n    console.log(response);\n    return;\n  })\n  .catch(error => {\n    console.error(error);\n  });\n  }, [links]);\n\n\n  const fetchImages = async (links) => {\n    const imagePromises = links.map(async (link) => {\n      try {\n        const response = await axios.get(`http://127.0.0.1:5000/AI/get_image?url=${encodeURIComponent(link)}`);\n        return response.data;\n      } catch (error) {\n        console.error(error);\n        return null;\n      }\n    });\n\n    const imageResults = await Promise.all(imagePromises);\n    setImages(imageResults);\n  };\n\n\n  // Function to convert new lines to HTML line breaks\n  const formatDataWithNewlines = (text) => {\n    return { __html: text.replace(/\\n/g, '<br>') };\n  };\n\n  return (\n    <div className=\"Report\">\n      <h2>Report</h2>\n      <br />\n      {data === 'Loading....' ? (\n        <div>\n          <p>{data}</p>\n          <div className=\"loading-spinner\">\n            <div className=\"spinner\"></div>\n          </div>\n\n        </div>\n        \n      ) : (\n         <>\n          <div>\n            {/* Render the images here */}\n            {images.map((image, index) => (\n              image ? <img key={index} src={image} alt={`Product ${index}`} /> : null\n            ))}\n          </div>\n          {/* Use dangerouslySetInnerHTML to render the data with new lines */}\n          <p dangerouslySetInnerHTML={formatDataWithNewlines(data)}></p>\n        </>\n      )}\n    </div>\n  );  \n  }\n   \n  export default Report;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}